{% set version = '1.95-4.9' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcurl
  version: {{ version|replace("-", "_") }}

source:
  fn: RCurl_{{ version }}.tar.gz
  url:
    - {{ cran_mirror }}/src/contrib/RCurl_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RCurl/RCurl_{{ version }}.tar.gz
  sha256: 96b5a5735c06e66d296b0dcab6c3c6cd4e5642aca3d2f79d7178ffbe73446e39


  # patches:
   # List any patch files here
   # - fix.patch

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0


  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: Rcompression, XML
requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{native}}toolchain        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}automake          # [not win]
    - {{posix}}pkg-config
    - {{posix}}make

  host:
    - r-base
    - r-bitops
    - {{native}}curl             # [win]
    - {{native}}libcurl          # [not win]

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-bitops
    - {{native}}curl             # [win]
    - {{native}}libcurl          # [not win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RCurl')"           # [not win]
    - "\"%R%\" -e \"library('RCurl')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.omegahat.net/RCurl
  license: BSD
  summary: A wrapper for 'libcurl' <http://curl.haxx.se/libcurl/> Provides functions to allow
    one to compose general HTTP requests and provides convenient functions to fetch
    URIs, get & post forms, etc. and process the results returned by the Web server.
    This provides a great deal of control over the HTTP/FTP/... connection and the form
    of the request while providing a higher-level interface than is available just using
    R socket connections.  Additionally, the underlying implementation is robust and
    extensive, supporting FTP/FTPS/TFTP (uploads and downloads), SSL/HTTPS, telnet,
    dict, ldap, and also supports cookies, redirects, authentication, etc.
  license_family: BSD

extra:
  recipe-maintainers:
    - johanneskoester
    - bgruening
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: RCurl
# Version: 1.95-4.9
# Title: General Network (HTTP/FTP/...) Client Interface for R
# Author: Duncan Temple Lang and the CRAN team
# SystemRequirements: GNU make, libcurl
# Maintainer: Duncan Temple Lang <duncan@r-project.org>
# Description: A wrapper for 'libcurl' <http://curl.haxx.se/libcurl/> Provides functions to allow one to compose general HTTP requests and provides convenient functions to fetch URIs, get & post forms, etc. and process the results returned by the Web server. This provides a great deal of control over the HTTP/FTP/... connection and the form of the request while providing a higher-level interface than is available just using R socket connections.  Additionally, the underlying implementation is robust and extensive, supporting FTP/FTPS/TFTP (uploads and downloads), SSL/HTTPS, telnet, dict, ldap, and also supports cookies, redirects, authentication, etc.
# License: BSD
# Depends: R (>= 3.0.0), methods, bitops
# Suggests: Rcompression, XML
# URL: http://www.omegahat.net/RCurl
# Additional_repositories: http://www.omegahat.net/R/
# Limitations: One doesn't yet have full control over the contents of a POST form such as specifying files, content type. Error handling uses a single global variable at present.
# Note: This will be used generally to communicate with HTTP servers and specifically in the SOAP package, HTML forms and for accessing data on Web sites that require more state information than simply URL access (e.g. cookies).
# Check: To run R CMD check, one really needs network access. It is an HTTP client! This can be problematic as a Web site may be down when you run but the real tests are important.
# Collate: aclassesEnums.R bitClasses.R xbits.R base64.R binary.S classes.S curl.S curlAuthConstants.R curlEnums.R curlError.R curlInfo.S dynamic.R form.S getFormParams.R getURLContent.R header.R http.R httpError.R httpErrors.R iconv.R info.S mime.R multi.S options.S scp.R support.S upload.R urlExists.R zclone.R zzz.R
# NeedsCompilation: yes
# Packaged: 2017-12-26 19:44:05 UTC; ripley
# Repository: CRAN
# Date/Publication: 2017-12-27 05:49:52 UTC

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
